version: '3.9'
name: pong

services:
  postgres:
    container_name: postgres
    image: postgres:15.1
    env_file: .env
    ports:
      - '5432:5432'
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - back-end
    restart: on-failure
    init: true

  nginx-proxy:
    container_name: nginx-proxy 
    image: nginx:stable
    env_file: .env
    depends_on:
      - server
    ports:
      - "8080:80"
      - "4430:443"
    configs:
      - source: nginx-config
        target: /etc/nginx/conf.d/default.conf
    secrets:
      - source: ssl-credentials
        target: /etc/ssl/private
    networks:
      - front-end
      - back-end
    restart: on-failure
    init: true

  server:
    container_name: server
    image: transcendence-server
    env_file: .env
    build:
      context: ./back-end
    depends_on:
      - postgres
    ports:
      - "4200:4200"
    # volumes:
    #   - ./back-end:/usr/backend
    networks:
      - back-end
    restart: on-failure
    init: true
    
  app:
    container_name: app
    image: transcendence-app
    environment:
      - REACT_APP_API_PROTOCOL=${PROTOCOL}
      - REACT_APP_API_HOST=${HOSTNAME}
      - REACT_APP_API_PORT=${PORT}
    build:
      context: ./front-end
    depends_on:
      - server
    ports:
      - "3000"
    volumes:
     - ./front-end/src:/usr/front-end/src
    networks:
      - front-end
    restart: on-failure
    init: true

volumes:
  database:
    # name: database
    # driver: local
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: ./volumes/database

networks:
  front-end:
    name: front-end
    driver: bridge
  back-end:
    name: back-end
    driver: bridge

configs:
  nginx-config:
    file: ./reverse-proxy/nginx.conf

secrets:
  ssl-credentials:
    file: ./ssl_credentials